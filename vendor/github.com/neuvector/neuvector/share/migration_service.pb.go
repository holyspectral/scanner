// Code generated by protoc-gen-go. DO NOT EDIT.
// source: migration_service.proto

package share

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReloadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReloadRequest) Reset()         { *m = ReloadRequest{} }
func (m *ReloadRequest) String() string { return proto.CompactTextString(m) }
func (*ReloadRequest) ProtoMessage()    {}
func (*ReloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_migration_service_35f17e4285544d82, []int{0}
}
func (m *ReloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReloadRequest.Unmarshal(m, b)
}
func (m *ReloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReloadRequest.Marshal(b, m, deterministic)
}
func (dst *ReloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReloadRequest.Merge(dst, src)
}
func (m *ReloadRequest) XXX_Size() int {
	return xxx_messageInfo_ReloadRequest.Size(m)
}
func (m *ReloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReloadRequest proto.InternalMessageInfo

type ReloadResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReloadResponse) Reset()         { *m = ReloadResponse{} }
func (m *ReloadResponse) String() string { return proto.CompactTextString(m) }
func (*ReloadResponse) ProtoMessage()    {}
func (*ReloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_migration_service_35f17e4285544d82, []int{1}
}
func (m *ReloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReloadResponse.Unmarshal(m, b)
}
func (m *ReloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReloadResponse.Marshal(b, m, deterministic)
}
func (dst *ReloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReloadResponse.Merge(dst, src)
}
func (m *ReloadResponse) XXX_Size() int {
	return xxx_messageInfo_ReloadResponse.Size(m)
}
func (m *ReloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReloadResponse proto.InternalMessageInfo

func (m *ReloadResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ReloadResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*ReloadRequest)(nil), "share.ReloadRequest")
	proto.RegisterType((*ReloadResponse)(nil), "share.ReloadResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MigrationServiceClient is the client API for MigrationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MigrationServiceClient interface {
	Reload(ctx context.Context, in *ReloadRequest, opts ...grpc.CallOption) (*ReloadResponse, error)
}

type migrationServiceClient struct {
	cc *grpc.ClientConn
}

func NewMigrationServiceClient(cc *grpc.ClientConn) MigrationServiceClient {
	return &migrationServiceClient{cc}
}

func (c *migrationServiceClient) Reload(ctx context.Context, in *ReloadRequest, opts ...grpc.CallOption) (*ReloadResponse, error) {
	out := new(ReloadResponse)
	err := c.cc.Invoke(ctx, "/share.MigrationService/Reload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MigrationServiceServer is the server API for MigrationService service.
type MigrationServiceServer interface {
	Reload(context.Context, *ReloadRequest) (*ReloadResponse, error)
}

func RegisterMigrationServiceServer(s *grpc.Server, srv MigrationServiceServer) {
	s.RegisterService(&_MigrationService_serviceDesc, srv)
}

func _MigrationService_Reload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MigrationServiceServer).Reload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/share.MigrationService/Reload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MigrationServiceServer).Reload(ctx, req.(*ReloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MigrationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "share.MigrationService",
	HandlerType: (*MigrationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Reload",
			Handler:    _MigrationService_Reload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "migration_service.proto",
}

func init() {
	proto.RegisterFile("migration_service.proto", fileDescriptor_migration_service_35f17e4285544d82)
}

var fileDescriptor_migration_service_35f17e4285544d82 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcf, 0xcd, 0x4c, 0x2f,
	0x4a, 0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0xce, 0x48, 0x2c, 0x4a, 0x55, 0xe2, 0xe7, 0xe2, 0x0d, 0x4a,
	0xcd, 0xc9, 0x4f, 0x4c, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0x72, 0xe0, 0xe2, 0x83,
	0x09, 0x14, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x70, 0xb1, 0x07, 0x97, 0x26, 0x27, 0xa7,
	0x16, 0x17, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x04, 0xc1, 0xb8, 0x42, 0x22, 0x5c, 0xac, 0xae,
	0x45, 0x45, 0xf9, 0x45, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e, 0x91, 0x27, 0x97,
	0x80, 0x2f, 0xcc, 0xd2, 0x60, 0x88, 0x9d, 0x42, 0xa6, 0x5c, 0x6c, 0x10, 0x53, 0x85, 0x44, 0xf4,
	0xc0, 0x16, 0xeb, 0xa1, 0xd8, 0x2a, 0x25, 0x8a, 0x26, 0x0a, 0xb1, 0x3a, 0x89, 0x0d, 0xec, 0x56,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0x26, 0x59, 0xb1, 0xc6, 0x00, 0x00, 0x00,
}
