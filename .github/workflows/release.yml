name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # write is needed for:
      # - OIDC for cosign's use in ecm-distro-tools/publish-image.
      # - Read vault secrets in rancher-eio/read-vault-secrets.
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download vulnerability database
      run: |
        VERSION=${{ github.ref_name }}
        wget https://${{ secrets.VULNDB_SERVER }}/${VERSION#v}/cvedb.regular -O data/cvedb.regular
    - name: Publish manifest
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        PRIME_REGISTRY: ${{ secrets.PRIME_REGISTRY }}
        PRIME_REGISTRY_USERNAME: ${{ secrets.PRIME_REGISTRY_USERNAME }}
        PRIME_REGISTRY_PASSWORD: ${{ secrets.PRIME_REGISTRY_PASSWORD }}
      with:
        image: neuvector-scanner
        tag: ${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64

        public-registry: docker.io
        public-repo: holyspectral
        public-username: ${{ env.DOCKER_USERNAME }}
        public-password: ${{ env.DOCKER_PASSWORD }}

        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-repo: holyspectral
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
    - name: Login to registry
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.NV_DOCKER_USERNAME }}
        password: ${{ secrets.NV_DOCKER_PASSWORD }}
    - name: Publish neuvector
      run: |
        docker buildx imagetools create --tag docker.io/holyspectral/scanner:${{ github.ref_name }} docker.io/holyspectral/neuvector-scanner:${{ github.ref_name }}

  notify:
    runs-on: ubuntu-latest
    needs: [publish]
    env:
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    steps:
      - name: Notify downstream job
        run: |
          jq -n '{"ref":"master","inputs":{"version":"'${{ github.ref_name }}'", "org": "holyspectral"}}' | gh api -H "Accept: application/vnd.github+json" --method POST /repos/holyspectral/release/actions/workflows/build-v5-scanner.yaml/dispatches --input -

